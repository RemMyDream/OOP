2.1. Try to add a method addDigitalVideoDisc which allows to pass an arbitrary number of arguments for dvd. Compare to an array parameter. What do you prefer in this case? 
I think I prefer the method addDigitalVideoDisc which allows to pass an arbitrary number of arguments for dvd because I don't have to create another array just to save dvd in order to add to the cart array.

3.
a) Is JAVA a Pass by Value or a Pass by Reference programming language?  
Java is pass-by-value

b) After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two objects still remain? 
After the call of swap(jungleDVD, cinderellaDVD), the values of their references are copied into the parameters o1 and o2 respectively. Inside the swap method, the references o1 and o2 are swapped. However, this only affects the local variables o1 and o2 within the swap method. The original references jungleDVD and cinderellaDVD in the main method are not modified, and that's why the titles remain unchanged in the main method after calling swap(jungleDVD, cinderellaDVD).

c) After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is the title of the JungleDVD changed? 
After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()), the title of the JungleDVD changed. The reason is that Java object variables are simply references that point to real objects in the memory heap. Therefore, even though Java passes parameters to methods by value, if the variable points to an object reference, the real object will also be changed.

6. For the toString() method, String should be the return type since it contains letters, numbers, and symbols.

